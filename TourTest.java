/**
 * The test class TourTest.  Generated by BlueJ.
 *
 * Copyright BlueJ authors
 * Copyright 2011 Jan Minar <rdancer@rdancer.org>  All rights reserved.
 *
 * @author BlueJ authors
 * @author Jan Minar <rdancer@rdancer.org> 
 */

import java.io.*;
import java.util.*;

public class TourTest extends junit.framework.TestCase
{
    World myWorld, myWorldThreeCities;
    
    /**
     * Default constructor for test class TourTest
     */
    public TourTest()
    {
    }

    /**
     * Sets up the test fixture.
     *
     * Called before every test case method.
     */
    protected void setUp()
            throws Exception
    {
       myWorld = new World(new File("assignment/testcase.txt"));

       String s = "NAME = testcase,\n";
       s += "SIZE = 3,\n";
       s += "1,2,\n";
       s += "3\n";
        
       myWorldThreeCities = new World(s);
    }

    /**
     * Tears down the test fixture.
     *
     * Called after every test case method.
     */
    protected void tearDown()
    {
    }
    
    public void testNewTour()
    {
        Tour myTour = new Tour(myWorld);
    }
    
    public void testSetGetPath()
    {
        Tour myTour = new Tour(myWorld);
        List<Integer> path = new ArrayList<Integer>();
        
        assertEquals(8, myWorld.cityCount());
        for (int i = 1; i <= myWorld.cityCount(); i++)
        {
            path.add(i);
        }
        
        myTour.setPath(path);
        
        assertEquals(path, myTour.getPath());

    }
    
    public void testTravelCostThreeCities()
    {
        Tour myTour = new Tour(myWorldThreeCities);
        List<Integer> path = new ArrayList<Integer>();
        path.add(1); path.add(2); path.add(3);
        myTour.setPath(path);
        
        assertEquals(6, myTour.travelCost());
    }
    
    public void testTravelCostEightCities()
    {
        Tour myTour = new Tour(myWorld);
        List<Integer> path = new ArrayList<Integer>();

        assertEquals(8, myWorld.cityCount());
        for (int i = 1; i <= myWorld.cityCount(); i++)
        {
            path.add(i);
        }
        
        myTour.setPath(path);
        
        assertEquals(28, myTour.travelCost());
    }    
}
